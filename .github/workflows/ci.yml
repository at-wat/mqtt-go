name: ci
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go:
          - '1.15'
          - '1.16'
          - '1.17'
          - '1.18'
          - '1.19'
          - '1.20'
          - '1.21'
          - '1.22'
        env:
          - PAHO_VERSION=v1.2.0
          - PAHO_VERSION=v1.3.2
    env:
      GO111MODULE: on
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Check paho wrapper go.mod
        run: |
          (! grep require paho/go.mod)
          (! grep replace paho/go.mod)  # don't add require/replace to paho/go.mod
      - name: Prepare integration test
        run: docker-compose up -d
      - name: Run go test
        run: |
          eval ${{ matrix.env }}

          go vet -tags integration ./...
          go build ./...

          go test $(go list ./... | grep -v examples) \
            -v \
            -tags integration \
            -race -coverprofile=cover.out -covermode=atomic

          (
            cd paho
            go get github.com/at-wat/mqtt-go
            echo 'replace github.com/at-wat/mqtt-go => ../' >> go.mod
            go get github.com/eclipse/paho.mqtt.golang@${PAHO_VERSION}
            go get github.com/eclipse/paho.mqtt.golang@${PAHO_VERSION}
            go vet ./...
            go test ./... \
              -v \
              -tags integration \
              -race -coverprofile=cover.out -covermode=atomic
          )

          go mod tidy
          git diff --exit-code go.mod go.sum  # mod/sum must be up-to-date and tidied
      - uses: codecov/codecov-action@v4
        with:
          files: ./cover.out,./paho/cover.out
          token: ${{ secrets.CODECOV_TOKEN }}
